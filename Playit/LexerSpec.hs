module Playit.LexerSpec (spec) where

import Test.Hspec
import Playit.Lexer

spec :: Spec
spec = do
  describe "Lexer (alexScanTokens)" $ do
    it "Return an empty list when the file is empty" $ do
      alexScanTokens "" `shouldBe` []

    it "Return an empty list when the file is just comments" $ do
      alexScanTokens comments `shouldBe` []

    it "Return the list of tokens if file has at least one character" $ do
      show (alexScanTokens "world") `shouldBe` "[(world), pos (1,1)]"

    it "Test Case: apuntadores.game" $ do 
      show (alexScanTokens apuntadores) `shouldBe` apuntadores'

    it "Test Case: inventory.game" $ do 
      show (alexScanTokens inventory) `shouldBe` inventory'

    it "Test Case: condicionalif.game" $ do 
      show (alexScanTokens condicionalif) `shouldBe` condicionalif'

    it "Test Case: factorial.game" $ do 
      show (alexScanTokens factorial) `shouldBe` factorial'

    it "Test Case: fragmentos.game" $ do 
      show (alexScanTokens fragmentos) `shouldBe` fragmentos'

    it "Test Case: hola.game" $ do 
      show (alexScanTokens hola) `shouldBe` hola'

    it "Test Case: parOImpar.game" $ do 
      show (alexScanTokens parOImpar) `shouldBe` parOImpar'

    it "Test Case: tablas.game" $ do 
      show (alexScanTokens tablas) `shouldBe` tablas'

    it "Test Case: volumen.game" $ do 
      show (alexScanTokens volumen) `shouldBe` volumen'

    it "Test Case: todosTokens.game" $ do 
      show (alexScanTokens todosTokens) `shouldBe` todosTokens'

    it "Test Case: caracteresInvalidos.game" $ do 
      show (alexScanTokens caracteresInvalidos) `shouldBe` caracteresInvalidos'

    it "Test Case: comentariosStrings.game" $ do 
      show (alexScanTokens comentariosStrings) `shouldBe` comentariosStrings'

    it "Test Case: caracteres.game" $ do 
      show (alexScanTokens caracteres) `shouldBe` caracteres'

    it "Test Case: strings.game" $ do 
      show (alexScanTokens strings) `shouldBe` strings'

    it "Test Case: arreglos.game" $ do 
      show (alexScanTokens arreglos) `shouldBe` arreglos'

    it "Test Case: booleanos.game" $ do 
      show (alexScanTokens booleanos) `shouldBe` booleanos'

    it "Test Case: enteros.game" $ do 
      show (alexScanTokens enteros) `shouldBe` enteros'

    it "Test Case: flotantes.game" $ do 
      show (alexScanTokens flotantes) `shouldBe` flotantes'

    it "Test Case: nombres.game" $ do 
      show (alexScanTokens nombres) `shouldBe` nombres'

    it "Test Case: stringsOp.game" $ do 
      show (alexScanTokens stringsOp) `shouldBe` stringsOp'


comments :: String
comments = "\"'Several-lines-Comment'\"@One-Line-Comment"

apuntadores :: String
apuntadores = "Power   puff p = summon Power\nRune    puff p = summon Rune\nRunes   puff p = summon Runes\nBattle  puff p = summon Battle\nSkill   puff p = summon Skill\nSkill   puff p = summon Skill|}10{|\nContactopuff p = summon Contacto\nKit of  Power puff p = summon Kit of Power\n\npuff p = 13\n\nfree p\nfree|}{| p\n\np == DeathZone\n"

apuntadores' :: String
apuntadores' = "[(Power), pos (1,1),(puff), pos (1,9),Identificador \"p\", pos (1,14),(=), pos (1,16),(summon), pos (1,18),(Power), pos (1,25),(\n), pos (1,30),(Rune), pos (2,1),(puff), pos (2,9),Identificador \"p\", pos (2,14),(=), pos (2,16),(summon), pos (2,18),(Rune), pos (2,25),(\n), pos (2,29),(Runes), pos (3,1),(puff), pos (3,9),Identificador \"p\", pos (3,14),(=), pos (3,16),(summon), pos (3,18),(Runes), pos (3,25),(\n), pos (3,30),(Battle), pos (4,1),(puff), pos (4,9),Identificador \"p\", pos (4,14),(=), pos (4,16),(summon), pos (4,18),(Battle), pos (4,25),(\n), pos (4,31),(Skill), pos (5,1),(puff), pos (5,9),Identificador \"p\", pos (5,14),(=), pos (5,16),(summon), pos (5,18),(Skill), pos (5,25),(\n), pos (5,30),(Skill), pos (6,1),(puff), pos (6,9),Identificador \"p\", pos (6,14),(=), pos (6,16),(summon), pos (6,18),(Skill), pos (6,25),(|}), pos (6,30),Entero 10, pos (6,32),({|), pos (6,34),(\n), pos (6,36),Identificador de tipo \"Contactopuff\", pos (7,1),Identificador \"p\", pos (7,14),(=), pos (7,16),(summon), pos (7,18),Identificador de tipo \"Contacto\", pos (7,25),(\n), pos (7,33),(Kit), pos (8,1),(of), pos (8,5),(Power), pos (8,9),(puff), pos (8,15),Identificador \"p\", pos (8,20),(=), pos (8,22),(summon), pos (8,24),(Kit), pos (8,31),(of), pos (8,35),(Power), pos (8,38),(\n), pos (8,43),(puff), pos (10,1),Identificador \"p\", pos (10,6),(=), pos (10,8),Entero 13, pos (10,10),(\n), pos (10,12),(free), pos (12,1),Identificador \"p\", pos (12,6),(\n), pos (12,7),(free), pos (13,1),(|}), pos (13,5),({|), pos (13,7),Identificador \"p\", pos (13,10),(\n), pos (13,11),Identificador \"p\", pos (15,1),(==), pos (15,3),(DeathZone), pos (15,6),(\n), pos (15,15)]"

inventory :: String
inventory = "Inventory registro:\n  Power up\n.~"

inventory' :: String
inventory' = ""

condicionalif :: String
condicionalif = "world %HolaMundo%:\n  Power edad = 18\n\n  Battle puedeConducir\n  Button:\n  | edad >= 18}\n    puedeConducir = Win\n  .~\n  \n  Button:\n  | edad >= 18}\n    puedeConducir = Win\n  | edad >= 18}\n    puedeConducir = Win\n  .~\n  \n  Button:\n  | edad >= 18}\n    puedeConducir = Win\n  | edad >= 18}\n    puedeConducir = Win\n  | notPressed}\n    puedeConducir = Win\n  .~      \n.~\n\n"

condicionalif' :: String
condicionalif' = "[(world), pos (1,1),(%HolaMundo%), pos (1,7),(:), pos (1,18),(\n), pos (1,19),(Power), pos (2,3),Identificador \"edad\", pos (2,9),(=), pos (2,14),Entero 18, pos (2,16),(\n), pos (2,18),(Battle), pos (4,3),Identificador \"puedeConducir\", pos (4,10),(\n), pos (4,23),(Button), pos (5,3),(:), pos (5,9),(\n), pos (5,10),(|), pos (6,3),Identificador \"edad\", pos (6,5),(>=), pos (6,10),Entero 18, pos (6,13),(}), pos (6,15),(\n), pos (6,16),Identificador \"puedeConducir\", pos (7,5),(=), pos (7,19),(Win), pos (7,21),(\n), pos (7,24),(.~), pos (8,3),(\n), pos (8,5),(Button), pos (10,3),(:), pos (10,9),(\n), pos (10,10),(|), pos (11,3),Identificador \"edad\", pos (11,5),(>=), pos (11,10),Entero 18, pos (11,13),(}), pos (11,15),(\n), pos (11,16),Identificador \"puedeConducir\", pos (12,5),(=), pos (12,19),(Win), pos (12,21),(\n), pos (12,24),(|), pos (13,3),Identificador \"edad\", pos (13,5),(>=), pos (13,10),Entero 18, pos (13,13),(}), pos (13,15),(\n), pos (13,16),Identificador \"puedeConducir\", pos (14,5),(=), pos (14,19),(Win), pos (14,21),(\n), pos (14,24),(.~), pos (15,3),(\n), pos (15,5),(Button), pos (17,3),(:), pos (17,9),(\n), pos (17,10),(|), pos (18,3),Identificador \"edad\", pos (18,5),(>=), pos (18,10),Entero 18, pos (18,13),(}), pos (18,15),(\n), pos (18,16),Identificador \"puedeConducir\", pos (19,5),(=), pos (19,19),(Win), pos (19,21),(\n), pos (19,24),(|), pos (20,3),Identificador \"edad\", pos (20,5),(>=), pos (20,10),Entero 18, pos (20,13),(}), pos (20,15),(\n), pos (20,16),Identificador \"puedeConducir\", pos (21,5),(=), pos (21,19),(Win), pos (21,21),(\n), pos (21,24),(|), pos (22,3),(notPressed), pos (22,5),(}), pos (22,15),(\n), pos (22,16),Identificador \"puedeConducir\", pos (23,5),(=), pos (23,19),(Win), pos (23,21),(\n), pos (23,24),(.~), pos (24,3),(\n), pos (24,5),(.~), pos (25,1),(\n), pos (25,3)]"

factorial :: String
factorial = "monster factorial(Power n) Power:\n  Button:\n    | n < 0 } unlock 0\n    | n == 0 } unlock 1\n    | n > 0 } unlock n * kill factorial(n-1)\n  .~\n.~\n\nworld %Factorial%:\n  drop factorial(5)\n.~"

factorial' :: String
factorial' = "[(monster), pos (1,1),Identificador \"factorial\", pos (1,9),((), pos (1,18),(Power), pos (1,19),Identificador \"n\", pos (1,25),()), pos (1,26),(Power), pos (1,28),(:), pos (1,33),(\n), pos (1,34),(Button), pos (2,3),(:), pos (2,9),(\n), pos (2,10),(|), pos (3,5),Identificador \"n\", pos (3,7),(<), pos (3,9),Entero 0, pos (3,11),(}), pos (3,13),(unlock), pos (3,15),Entero 0, pos (3,22),(\n), pos (3,23),(|), pos (4,5),Identificador \"n\", pos (4,7),(==), pos (4,9),Entero 0, pos (4,12),(}), pos (4,14),(unlock), pos (4,16),Entero 1, pos (4,23),(\n), pos (4,24),(|), pos (5,5),Identificador \"n\", pos (5,7),(>), pos (5,9),Entero 0, pos (5,11),(}), pos (5,13),(unlock), pos (5,15),Identificador \"n\", pos (5,22),(*), pos (5,24),(kill), pos (5,26),Identificador \"factorial\", pos (5,31),((), pos (5,40),Identificador \"n\", pos (5,41),(-), pos (5,42),Entero 1, pos (5,43),()), pos (5,44),(\n), pos (5,45),(.~), pos (6,3),(\n), pos (6,5),(.~), pos (7,1),(\n), pos (7,3),(world), pos (9,1),(%Factorial%), pos (9,7),(:), pos (9,18),(\n), pos (9,19),(drop), pos (10,3),Identificador \"factorial\", pos (10,8),((), pos (10,17),Entero 5, pos (10,18),()), pos (10,19),(\n), pos (10,20),(.~), pos (11,1)]"

fragmentos :: String
fragmentos = "Inventory Registro:\n  Power up\n  Rune tip\n.~\n\nInventory Contacto:\n  Runes nombre\n  Power edad\n  Battle tieneTrabajo\n.~\n\nInventory Circle:\n  Skill centerX\n  Skill centerY\n  Skill radius\n.~\n\nInventory Rectangle:\n  Skill topLeftX\n  Skill topLeftY\n  Skill bottomRightX\n  Skill bottomRightY\n.~\n\nboss areaCirculo(Circle ?c) Skill:\n  unlock 3'14 * c spawn radius * c spawn radius\n.~\n\nmonster calcularGanancia(Power precioComprado, Power precioVendido) Power:\n  unlock precioVendido - precioComprado\n.~\n\nmonster calcularGanancia(Producto ?producto, Power precioVendido) Power:\n  unlock precioVendido - producto spawn precioReal\n.~\n\nInventory Producto:\n  Power precioReal\n.~\n\nworld %FragmentosDeCodigo%:\n  01\n  003\n  0000000000000000000000000000000000000005\n  Power a\n  Rune c\n  Battle esMayor = Lose\n  Power b = 2\n  a = 1\n  Skill r = 0'5\n  a = 2\n  Rune|}3{| abc\n  Runes|}3{| nombres = |}~Natascha~, ~Francisco~, ~Manuel~{|\n  Skill|}3{| indices = |}3'67, 3'20, 3'0{|\n  |}*s*, *t*, *r*, *i*, *n*, *g*, *s*{| == ~strings~\n  Kit of Power lista1 = <<*C*, *3*>>\n  Kit of Rune lista2\n  Registro r = {0, *f*}\n  Contacto Alex = {~Alex~, 15, Lose}\n  Contacto sofia\n  sofia spawn nombre = ~Sofia~\n  sofia spawn edad = 29\n  sofia spawn tieneTrabajo = Win\n  drop ~Hola ~, sofia spawn nombre\n  Shape sh\n  sh spawn c spawn centerX = 2'1\n  sh spawn c spawn centerY = 5'0\n  sh spawn c spawn centerY = 5'0\n  sh spawn c spawn radius = 15\n  drop ~el area del circulo es ~, kill areaCirculo(sh spawn c)\n  Power|}{| puff p = summon Power|}20{|\n  puff p|}1{| = 15\n  free|}{| p\n  Power puff p = summon Power\n  puff p = 15\n  free p\n  p = summon Power\n  puff p = 18\n  free p\n  Power n1 = 15, n2 = 13\n  n1++\n  n2--\n  Power n3 = n1, n4 = n2\n  bool ? true : false\n  Battle puedeConducir = Lose\n  Power edad = 18\n  Button:\n  | edad >= 18 }\n    puedeConducir = Win\n  .~\n  Runes|}5{| edades = |}~12~, ~23~, ~15~, ~40~, ~15~{| \n  Runes|}5{| nombres = |}~Natascha~, ~Francisco~, ~Manuel~, ~Ricardo~, ~Haskell~{| \n  controller i = 0 -> 4:\n    drop ~Hola ~, nombres|}i{|, ~ tienes ~, edad|}i{|, ~ anios!~\n  .~\n  Power i = 0\n  play:\n    drop ~Hola ~, nombres|}i{|, ~ tienes ~, edad|}i{|, ~ anios!~\n    i++\n  lock i < 5\n  .~\n  gameOver\n  keepPlaying\n  drop ~Ganancia de ~, kill calcularGanancia(1500, 2000)\n  Producto p\n  p spawn precioReal = 1500\n  drop ~Ganancia de ~, kill calcularGanancia(p, 2000)\n  Power numero\n  numero = joystick ~Ingresa un numero: ~\n  drop ~Factorial de ~, numero, ~ es ~, kill factorial(numero)\n.~\n"

fragmentos' :: String
fragmentos' = "[(Inventory), pos (1,1),Identificador de tipo \"Registro\", pos (1,11),(:), pos (1,19),(\n), pos (1,20),(Power), pos (2,3),Identificador \"up\", pos (2,9),(\n), pos (2,11),(Rune), pos (3,3),Identificador \"tip\", pos (3,8),(\n), pos (3,11),(.~), pos (4,1),(\n), pos (4,3),(Inventory), pos (6,1),Identificador de tipo \"Contacto\", pos (6,11),(:), pos (6,19),(\n), pos (6,20),(Runes), pos (7,3),Identificador \"nombre\", pos (7,9),(\n), pos (7,15),(Power), pos (8,3),Identificador \"edad\", pos (8,9),(\n), pos (8,13),(Battle), pos (9,3),Identificador \"tieneTrabajo\", pos (9,10),(\n), pos (9,22),(.~), pos (10,1),(\n), pos (10,3),(Inventory), pos (12,1),Identificador de tipo \"Circle\", pos (12,11),(:), pos (12,17),(\n), pos (12,18),(Skill), pos (13,3),Identificador \"centerX\", pos (13,9),(\n), pos (13,16),(Skill), pos (14,3),Identificador \"centerY\", pos (14,9),(\n), pos (14,16),(Skill), pos (15,3),Identificador \"radius\", pos (15,9),(\n), pos (15,15),(.~), pos (16,1),(\n), pos (16,3),(Inventory), pos (18,1),Identificador de tipo \"Rectangle\", pos (18,11),(:), pos (18,20),(\n), pos (18,21),(Skill), pos (19,3),Identificador \"topLeftX\", pos (19,9),(\n), pos (19,17),(Skill), pos (20,3),Identificador \"topLeftY\", pos (20,9),(\n), pos (20,17),(Skill), pos (21,3),Identificador \"bottomRightX\", pos (21,9),(\n), pos (21,21),(Skill), pos (22,3),Identificador \"bottomRightY\", pos (22,9),(\n), pos (22,21),(.~), pos (23,1),(\n), pos (23,3),(boss), pos (25,1),Identificador \"areaCirculo\", pos (25,6),((), pos (25,17),Identificador de tipo \"Circle\", pos (25,18),(?), pos (25,25),Identificador \"c\", pos (25,26),()), pos (25,27),(Skill), pos (25,29),(:), pos (25,34),(\n), pos (25,35),(unlock), pos (26,3),Flotante 3'14, pos (26,10),(*), pos (26,15),Identificador \"c\", pos (26,17),(spawn), pos (26,19),Identificador \"radius\", pos (26,25),(*), pos (26,32),Identificador \"c\", pos (26,34),(spawn), pos (26,36),Identificador \"radius\", pos (26,42),(\n), pos (26,48),(.~), pos (27,1),(\n), pos (27,3),(monster), pos (29,1),Identificador \"calcularGanancia\", pos (29,9),((), pos (29,25),(Power), pos (29,26),Identificador \"precioComprado\", pos (29,32),(,), pos (29,46),(Power), pos (29,48),Identificador \"precioVendido\", pos (29,54),()), pos (29,67),(Power), pos (29,69),(:), pos (29,74),(\n), pos (29,75),(unlock), pos (30,3),Identificador \"precioVendido\", pos (30,10),(-), pos (30,24),Identificador \"precioComprado\", pos (30,26),(\n), pos (30,40),(.~), pos (31,1),(\n), pos (31,3),(monster), pos (33,1),Identificador \"calcularGanancia\", pos (33,9),((), pos (33,25),Identificador de tipo \"Producto\", pos (33,26),(?), pos (33,35),Identificador \"producto\", pos (33,36),(,), pos (33,44),(Power), pos (33,46),Identificador \"precioVendido\", pos (33,52),()), pos (33,65),(Power), pos (33,67),(:), pos (33,72),(\n), pos (33,73),(unlock), pos (34,3),Identificador \"precioVendido\", pos (34,10),(-), pos (34,24),Identificador \"producto\", pos (34,26),(spawn), pos (34,35),Identificador \"precioReal\", pos (34,41),(\n), pos (34,51),(.~), pos (35,1),(\n), pos (35,3),(Inventory), pos (37,1),Identificador de tipo \"Producto\", pos (37,11),(:), pos (37,19),(\n), pos (37,20),(Power), pos (38,3),Identificador \"precioReal\", pos (38,9),(\n), pos (38,19),(.~), pos (39,1),(\n), pos (39,3),(world), pos (41,1),(%FragmentosDeCodigo%), pos (41,7),(:), pos (41,27),(\n), pos (41,28),Entero 01, pos (42,3),(\n), pos (42,5),Entero 003, pos (43,3),(\n), pos (43,6),Entero 0000000000000000000000000000000000000005, pos (44,3),(\n), pos (44,43),(Power), pos (45,3),Identificador \"a\", pos (45,9),(\n), pos (45,10),(Rune), pos (46,3),Identificador \"c\", pos (46,8),(\n), pos (46,9),(Battle), pos (47,3),Identificador \"esMayor\", pos (47,10),(=), pos (47,18),(Lose), pos (47,20),(\n), pos (47,24),(Power), pos (48,3),Identificador \"b\", pos (48,9),(=), pos (48,11),Entero 2, pos (48,13),(\n), pos (48,14),Identificador \"a\", pos (49,3),(=), pos (49,5),Entero 1, pos (49,7),(\n), pos (49,8),(Skill), pos (50,3),Identificador \"r\", pos (50,9),(=), pos (50,11),Flotante 0'5, pos (50,13),(\n), pos (50,16),Identificador \"a\", pos (51,3),(=), pos (51,5),Entero 2, pos (51,7),(\n), pos (51,8),(Rune), pos (52,3),(|}), pos (52,7),Entero 3, pos (52,9),({|), pos (52,10),Identificador \"abc\", pos (52,13),(\n), pos (52,16),(Runes), pos (53,3),(|}), pos (53,8),Entero 3, pos (53,10),({|), pos (53,11),Identificador \"nombres\", pos (53,14),(=), pos (53,22),(|}), pos (53,24),String \"~Natascha~\", pos (53,26),(,), pos (53,36),String \"~Francisco~\", pos (53,38),(,), pos (53,49),String \"~Manuel~\", pos (53,51),({|), pos (53,59),(\n), pos (53,61),(Skill), pos (54,3),(|}), pos (54,8),Entero 3, pos (54,10),({|), pos (54,11),Identificador \"indices\", pos (54,14),(=), pos (54,22),(|}), pos (54,24),Flotante 3'67, pos (54,26),(,), pos (54,30),Flotante 3'20, pos (54,32),(,), pos (54,36),Flotante 3'0, pos (54,38),({|), pos (54,41),(\n), pos (54,43),(|}), pos (55,3),Caracter '*s*', pos (55,5),(,), pos (55,8),Caracter '*t*', pos (55,10),(,), pos (55,13),Caracter '*r*', pos (55,15),(,), pos (55,18),Caracter '*i*', pos (55,20),(,), pos (55,23),Caracter '*n*', pos (55,25),(,), pos (55,28),Caracter '*g*', pos (55,30),(,), pos (55,33),Caracter '*s*', pos (55,35),({|), pos (55,38),(==), pos (55,41),String \"~strings~\", pos (55,44),(\n), pos (55,53),(Kit), pos (56,3),(of), pos (56,7),(Power), pos (56,10),Identificador \"lista1\", pos (56,16),(=), pos (56,23),(<<), pos (56,25),Caracter '*C*', pos (56,27),(,), pos (56,30),Caracter '*3*', pos (56,32),(>>), pos (56,35),(\n), pos (56,37),(Kit), pos (57,3),(of), pos (57,7),(Rune), pos (57,10),Identificador \"lista2\", pos (57,15),(\n), pos (57,21),Identificador de tipo \"Registro\", pos (58,3),Identificador \"r\", pos (58,12),(=), pos (58,14),({), pos (58,16),Entero 0, pos (58,17),(,), pos (58,18),Caracter '*f*', pos (58,20),(}), pos (58,23),(\n), pos (58,24),Identificador de tipo \"Contacto\", pos (59,3),Identificador de tipo \"Alex\", pos (59,12),(=), pos (59,17),({), pos (59,19),String \"~Alex~\", pos (59,20),(,), pos (59,26),Entero 15, pos (59,28),(,), pos (59,30),(Lose), pos (59,32),(}), pos (59,36),(\n), pos (59,37),Identificador de tipo \"Contacto\", pos (60,3),Identificador \"sofia\", pos (60,12),(\n), pos (60,17),Identificador \"sofia\", pos (61,3),(spawn), pos (61,9),Identificador \"nombre\", pos (61,15),(=), pos (61,22),String \"~Sofia~\", pos (61,24),(\n), pos (61,31),Identificador \"sofia\", pos (62,3),(spawn), pos (62,9),Identificador \"edad\", pos (62,15),(=), pos (62,20),Entero 29, pos (62,22),(\n), pos (62,24),Identificador \"sofia\", pos (63,3),(spawn), pos (63,9),Identificador \"tieneTrabajo\", pos (63,15),(=), pos (63,28),(Win), pos (63,30),(\n), pos (63,33),(drop), pos (64,3),String \"~Hola ~\", pos (64,8),(,), pos (64,15),Identificador \"sofia\", pos (64,17),(spawn), pos (64,23),Identificador \"nombre\", pos (64,29),(\n), pos (64,35),Identificador de tipo \"Shape\", pos (65,3),Identificador \"sh\", pos (65,9),(\n), pos (65,11),Identificador \"sh\", pos (66,3),(spawn), pos (66,6),Identificador \"c\", pos (66,12),(spawn), pos (66,14),Identificador \"centerX\", pos (66,20),(=), pos (66,28),Flotante 2'1, pos (66,30),(\n), pos (66,33),Identificador \"sh\", pos (67,3),(spawn), pos (67,6),Identificador \"c\", pos (67,12),(spawn), pos (67,14),Identificador \"centerY\", pos (67,20),(=), pos (67,28),Flotante 5'0, pos (67,30),(\n), pos (67,33),Identificador \"sh\", pos (68,3),(spawn), pos (68,6),Identificador \"c\", pos (68,12),(spawn), pos (68,14),Identificador \"centerY\", pos (68,20),(=), pos (68,28),Flotante 5'0, pos (68,30),(\n), pos (68,33),Identificador \"sh\", pos (69,3),(spawn), pos (69,6),Identificador \"c\", pos (69,12),(spawn), pos (69,14),Identificador \"radius\", pos (69,20),(=), pos (69,27),Entero 15, pos (69,29),(\n), pos (69,31),(drop), pos (70,3),String \"~el area del circulo es ~\", pos (70,8),(,), pos (70,33),(kill), pos (70,35),Identificador \"areaCirculo\", pos (70,40),((), pos (70,51),Identificador \"sh\", pos (70,52),(spawn), pos (70,55),Identificador \"c\", pos (70,61),()), pos (70,62),(\n), pos (70,63),(Power), pos (71,3),(|}), pos (71,8),({|), pos (71,10),(puff), pos (71,13),Identificador \"p\", pos (71,18),(=), pos (71,20),(summon), pos (71,22),(Power), pos (71,29),(|}), pos (71,34),Entero 20, pos (71,36),({|), pos (71,38),(\n), pos (71,40),(puff), pos (72,3),Identificador \"p\", pos (72,8),(|}), pos (72,9),Entero 1, pos (72,11),({|), pos (72,12),(=), pos (72,15),Entero 15, pos (72,17),(\n), pos (72,19),(free), pos (73,3),(|}), pos (73,7),({|), pos (73,9),Identificador \"p\", pos (73,12),(\n), pos (73,13),(Power), pos (74,3),(puff), pos (74,9),Identificador \"p\", pos (74,14),(=), pos (74,16),(summon), pos (74,18),(Power), pos (74,25),(\n), pos (74,30),(puff), pos (75,3),Identificador \"p\", pos (75,8),(=), pos (75,10),Entero 15, pos (75,12),(\n), pos (75,14),(free), pos (76,3),Identificador \"p\", pos (76,8),(\n), pos (76,9),Identificador \"p\", pos (77,3),(=), pos (77,5),(summon), pos (77,7),(Power), pos (77,14),(\n), pos (77,19),(puff), pos (78,3),Identificador \"p\", pos (78,8),(=), pos (78,10),Entero 18, pos (78,12),(\n), pos (78,14),(free), pos (79,3),Identificador \"p\", pos (79,8),(\n), pos (79,9),(Power), pos (80,3),Identificador \"n1\", pos (80,9),(=), pos (80,12),Entero 15, pos (80,14),(,), pos (80,16),Identificador \"n2\", pos (80,18),(=), pos (80,21),Entero 13, pos (80,23),(\n), pos (80,25),Identificador \"n1\", pos (81,3),(++), pos (81,5),(\n), pos (81,7),Identificador \"n2\", pos (82,3),(--), pos (82,5),(\n), pos (82,7),(Power), pos (83,3),Identificador \"n3\", pos (83,9),(=), pos (83,12),Identificador \"n1\", pos (83,14),(,), pos (83,16),Identificador \"n4\", pos (83,18),(=), pos (83,21),Identificador \"n2\", pos (83,23),(\n), pos (83,25),Identificador \"bool\", pos (84,3),(?), pos (84,8),Identificador \"true\", pos (84,10),(:), pos (84,15),Identificador \"false\", pos (84,17),(\n), pos (84,22),(Battle), pos (85,3),Identificador \"puedeConducir\", pos (85,10),(=), pos (85,24),(Lose), pos (85,26),(\n), pos (85,30),(Power), pos (86,3),Identificador \"edad\", pos (86,9),(=), pos (86,14),Entero 18, pos (86,16),(\n), pos (86,18),(Button), pos (87,3),(:), pos (87,9),(\n), pos (87,10),(|), pos (88,3),Identificador \"edad\", pos (88,5),(>=), pos (88,10),Entero 18, pos (88,13),(}), pos (88,16),(\n), pos (88,17),Identificador \"puedeConducir\", pos (89,5),(=), pos (89,19),(Win), pos (89,21),(\n), pos (89,24),(.~), pos (90,3),(\n), pos (90,5),(Runes), pos (91,3),(|}), pos (91,8),Entero 5, pos (91,10),({|), pos (91,11),Identificador \"edades\", pos (91,14),(=), pos (91,21),(|}), pos (91,23),String \"~12~\", pos (91,25),(,), pos (91,29),String \"~23~\", pos (91,31),(,), pos (91,35),String \"~15~\", pos (91,37),(,), pos (91,41),String \"~40~\", pos (91,43),(,), pos (91,47),String \"~15~\", pos (91,49),({|), pos (91,53),(\n), pos (91,55),(Runes), pos (92,3),(|}), pos (92,8),Entero 5, pos (92,10),({|), pos (92,11),Identificador \"nombres\", pos (92,14),(=), pos (92,22),(|}), pos (92,24),String \"~Natascha~\", pos (92,26),(,), pos (92,36),String \"~Francisco~\", pos (92,38),(,), pos (92,49),String \"~Manuel~\", pos (92,51),(,), pos (92,59),String \"~Ricardo~\", pos (92,61),(,), pos (92,70),String \"~Haskell~\", pos (92,72),({|), pos (92,81),(\n), pos (92,83),(controller), pos (93,3),Identificador \"i\", pos (93,14),(=), pos (93,16),Entero 0, pos (93,18),(->), pos (93,20),Entero 4, pos (93,23),(:), pos (93,24),(\n), pos (93,25),(drop), pos (94,5),String \"~Hola ~\", pos (94,10),(,), pos (94,17),Identificador \"nombres\", pos (94,19),(|}), pos (94,26),Identificador \"i\", pos (94,28),({|), pos (94,29),(,), pos (94,31),String \"~ tienes ~\", pos (94,33),(,), pos (94,43),Identificador \"edad\", pos (94,45),(|}), pos (94,49),Identificador \"i\", pos (94,51),({|), pos (94,52),(,), pos (94,54),String \"~ anios!~\", pos (94,56),(\n), pos (94,65),(.~), pos (95,3),(\n), pos (95,5),(Power), pos (96,3),Identificador \"i\", pos (96,9),(=), pos (96,11),Entero 0, pos (96,13),(\n), pos (96,14),(play), pos (97,3),(:), pos (97,7),(\n), pos (97,8),(drop), pos (98,5),String \"~Hola ~\", pos (98,10),(,), pos (98,17),Identificador \"nombres\", pos (98,19),(|}), pos (98,26),Identificador \"i\", pos (98,28),({|), pos (98,29),(,), pos (98,31),String \"~ tienes ~\", pos (98,33),(,), pos (98,43),Identificador \"edad\", pos (98,45),(|}), pos (98,49),Identificador \"i\", pos (98,51),({|), pos (98,52),(,), pos (98,54),String \"~ anios!~\", pos (98,56),(\n), pos (98,65),Identificador \"i\", pos (99,5),(++), pos (99,6),(\n), pos (99,8),(lock), pos (100,3),Identificador \"i\", pos (100,8),(<), pos (100,10),Entero 5, pos (100,12),(\n), pos (100,13),(.~), pos (101,3),(\n), pos (101,5),(gameOver), pos (102,3),(\n), pos (102,11),(keepPlaying), pos (103,3),(\n), pos (103,14),(drop), pos (104,3),String \"~Ganancia de ~\", pos (104,8),(,), pos (104,22),(kill), pos (104,24),Identificador \"calcularGanancia\", pos (104,29),((), pos (104,45),Entero 1500, pos (104,46),(,), pos (104,50),Entero 2000, pos (104,52),()), pos (104,56),(\n), pos (104,57),Identificador de tipo \"Producto\", pos (105,3),Identificador \"p\", pos (105,12),(\n), pos (105,13),Identificador \"p\", pos (106,3),(spawn), pos (106,5),Identificador \"precioReal\", pos (106,11),(=), pos (106,22),Entero 1500, pos (106,24),(\n), pos (106,28),(drop), pos (107,3),String \"~Ganancia de ~\", pos (107,8),(,), pos (107,22),(kill), pos (107,24),Identificador \"calcularGanancia\", pos (107,29),((), pos (107,45),Identificador \"p\", pos (107,46),(,), pos (107,47),Entero 2000, pos (107,49),()), pos (107,53),(\n), pos (107,54),(Power), pos (108,3),Identificador \"numero\", pos (108,9),(\n), pos (108,15),Identificador \"numero\", pos (109,3),(=), pos (109,10),(joystick), pos (109,12),String \"~Ingresa un numero: ~\", pos (109,21),(\n), pos (109,42),(drop), pos (110,3),String \"~Factorial de ~\", pos (110,8),(,), pos (110,23),Identificador \"numero\", pos (110,25),(,), pos (110,31),String \"~ es ~\", pos (110,33),(,), pos (110,39),(kill), pos (110,41),Identificador \"factorial\", pos (110,46),((), pos (110,55),Identificador \"numero\", pos (110,56),()), pos (110,62),(\n), pos (110,63),(.~), pos (111,1),(\n), pos (111,3)]"

hola :: String
hola = "world %HolaMundo%:  drop ~Hello World!~.~"

hola' :: String
hola' = "[(world), pos (1,1),(%HolaMundo%), pos (1,7),(:), pos (1,18),(\n), pos (1,19),(drop), pos (2,3),String \"~Hello World!~\", pos (2,8),(\n), pos (2,22),(.~), pos (3,1),(\n), pos (3,3)]"

parOImpar :: String
parOImpar = "world %ParOImpar%:\n  \"' Dice si un numero es par o impar '\"\n  Power numero\n  numero = joystick ~Introduzca un numero entero: ~\n  Button:\n  |numero % 2 == 0 }\n    drop ~es par~\n  | notPressed }\n    drop ~es impar~\n  .~\n.~\n"

parOImpar' :: String
parOImpar' = "[(world), pos (1,1),(%ParOImpar%), pos (1,7),(:), pos (1,18),(\n), pos (1,19),(\n), pos (2,41),(Power), pos (3,3),Identificador \"numero\", pos (3,9),(\n), pos (3,15),Identificador \"numero\", pos (4,3),(=), pos (4,10),(joystick), pos (4,12),String \"~Introduzca un numero entero: ~\", pos (4,21),(\n), pos (4,52),(Button), pos (5,3),(:), pos (5,9),(\n), pos (5,10),(|), pos (6,3),Identificador \"numero\", pos (6,4),(%), pos (6,11),Entero 2, pos (6,13),(==), pos (6,15),Entero 0, pos (6,18),(}), pos (6,20),(\n), pos (6,21),(drop), pos (7,5),String \"~es par~\", pos (7,10),(\n), pos (7,18),(|), pos (8,3),(notPressed), pos (8,5),(}), pos (8,16),(\n), pos (8,17),(drop), pos (9,5),String \"~es impar~\", pos (9,10),(\n), pos (9,20),(.~), pos (10,3),(\n), pos (10,5),(.~), pos (11,1),(\n), pos (11,3)]"

tablas :: String
tablas = "world %Tablas%:\n  Rune seguir = *s*\n  Power i, numero\n  \n  play:\n    numero = joystick ~Introduzca un numero entero: ~\n  \n    drop ~La tabla de multiplicar del ~,numero,~ es:~\n  \n    @ Inicio del anidamiento\n    i = 1 \n    play:\n      drop numero, ~ \\* ~, i, ~ = ~, i * numero\n      i++\n    lock i <= 10\n    .~\n    @ Fin del anidamiento\n  \n    seguir = kill portalRunesToRune( joystick ~Desea ver otra tabla (s/n)?: ~)\n  lock  seguir != *n*\n  .~\n.~\n"

tablas' :: String
tablas' = "[(world), pos (1,1),(%Tablas%), pos (1,7),(:), pos (1,15),(\n), pos (1,16),(Rune), pos (2,3),Identificador \"seguir\", pos (2,8),(=), pos (2,15),Caracter '*s*', pos (2,17),(\n), pos (2,20),(Power), pos (3,3),Identificador \"i\", pos (3,9),(,), pos (3,10),Identificador \"numero\", pos (3,12),(\n), pos (3,18),(play), pos (5,3),(:), pos (5,7),(\n), pos (5,8),Identificador \"numero\", pos (6,5),(=), pos (6,12),(joystick), pos (6,14),String \"~Introduzca un numero entero: ~\", pos (6,23),(\n), pos (6,54),(drop), pos (8,5),String \"~La tabla de multiplicar del ~\", pos (8,10),(,), pos (8,40),Identificador \"numero\", pos (8,41),(,), pos (8,47),String \"~ es:~\", pos (8,48),(\n), pos (8,54),(\n), pos (10,29),Identificador \"i\", pos (11,5),(=), pos (11,7),Entero 1, pos (11,9),(\n), pos (11,10),(play), pos (12,5),(:), pos (12,9),(\n), pos (12,10),(drop), pos (13,7),Identificador \"numero\", pos (13,12),(,), pos (13,18),String \"~ \\* ~\", pos (13,20),(,), pos (13,26),Identificador \"i\", pos (13,28),(,), pos (13,29),String \"~ = ~\", pos (13,31),(,), pos (13,36),Identificador \"i\", pos (13,38),(*), pos (13,40),Identificador \"numero\", pos (13,42),(\n), pos (13,48),Identificador \"i\", pos (14,7),(++), pos (14,8),(\n), pos (14,10),(lock), pos (15,5),Identificador \"i\", pos (15,10),(<=), pos (15,12),Entero 10, pos (15,15),(\n), pos (15,17),(.~), pos (16,5),(\n), pos (16,7),(\n), pos (17,26),Identificador \"seguir\", pos (19,5),(=), pos (19,12),(kill), pos (19,14),Identificador \"portalRunesToRune\", pos (19,19),((), pos (19,36),(joystick), pos (19,38),String \"~Desea ver otra tabla (s/n)?: ~\", pos (19,47),()), pos (19,78),(\n), pos (19,79),(lock), pos (20,3),Identificador \"seguir\", pos (20,9),(!=), pos (20,16),Caracter '*n*', pos (20,19),(\n), pos (20,22),(.~), pos (21,3),(\n), pos (21,5),(.~), pos (22,1),(\n), pos (22,3)]"

volumen :: String
volumen = "world %VolumenCubo%:\n  \"' Calcula el volumen de un Cubo '\"\n  Skill arista, volumen\n  \n  arista = joystick ~Introduzca arista: ~\n  \n  volumen = arista * arista * arista\n  \n  drop ~el volumen del cubo es: ~, volumen\n.~\n"

volumen' :: String
volumen' = "[(world), pos (1,1),(%VolumenCubo%), pos (1,7),(:), pos (1,20),(\n), pos (1,21),(\n), pos (2,38),(Skill), pos (3,3),Identificador \"arista\", pos (3,9),(,), pos (3,15),Identificador \"volumen\", pos (3,17),(\n), pos (3,24),Identificador \"arista\", pos (5,3),(=), pos (5,10),(joystick), pos (5,12),String \"~Introduzca arista: ~\", pos (5,21),(\n), pos (5,42),Identificador \"volumen\", pos (7,3),(=), pos (7,11),Identificador \"arista\", pos (7,13),(*), pos (7,20),Identificador \"arista\", pos (7,22),(*), pos (7,29),Identificador \"arista\", pos (7,31),(\n), pos (7,37),(drop), pos (9,3),String \"~el volumen del cubo es: ~\", pos (9,8),(,), pos (9,34),Identificador \"volumen\", pos (9,36),(\n), pos (9,43),(.~), pos (10,1),(\n), pos (10,3)]"

todosTokens :: String
todosTokens = "Battle\nDeathZone\nInventory\nItems\nKit\nPower\nRune\nRunes\nSkill\nButton\nboss\ncontroller\ndrop\nnotPressed\nfree\ngameOver\njoystick\nkeepPlaying\nkill\nlock\nmonster\nplay\npuff\nspawn\nsummon\nunlock\nworld\nof\nWin\nLose\n.~\n//\n||\n&&\n<=\n==\n!=\n>=\n<<\n>>\n++\n--\n<-\n->\n|}\n{|\n+\n-\n*\n/\n%\n#\n?\n!\n<\n>\n(\n)\n{\n}\n,\n:\n|\n=\na1\nA1\naA1\nAa1\n3a1\nnombre programa a1\nnombre programa A1\nnombre programa aA1\nnombre programa Aa1\n000000000000000001\n000000000001'0000000000000000000000001\n\"' Comentario varias lineas '\"\n@ Comentario\n~String~\n*c*\ntest1\nyes_we_can\nmaybe'not\n1\ntest1\nmaybe not"

todosTokens' :: String
todosTokens' = "[(Battle), pos (1,1),(\n), pos (1,7),(DeathZone), pos (2,1),(\n), pos (2,10),(Inventory), pos (3,1),(\n), pos (3,10),(Items), pos (4,1),(\n), pos (4,6),(Kit), pos (5,1),(\n), pos (5,4),(Power), pos (6,1),(\n), pos (6,6),(Rune), pos (7,1),(\n), pos (7,5),(Runes), pos (8,1),(\n), pos (8,6),(Skill), pos (9,1),(\n), pos (9,6),(Button), pos (10,1),(\n), pos (10,7),(boss), pos (11,1),(\n), pos (11,5),(controller), pos (12,1),(\n), pos (12,11),(drop), pos (13,1),(\n), pos (13,5),(notPressed), pos (14,1),(\n), pos (14,11),(free), pos (15,1),(\n), pos (15,5),(gameOver), pos (16,1),(\n), pos (16,9),(joystick), pos (17,1),(\n), pos (17,9),(keepPlaying), pos (18,1),(\n), pos (18,12),(kill), pos (19,1),(\n), pos (19,5),(lock), pos (20,1),(\n), pos (20,5),(monster), pos (21,1),(\n), pos (21,8),(play), pos (22,1),(\n), pos (22,5),(puff), pos (23,1),(\n), pos (23,5),(spawn), pos (24,1),(\n), pos (24,6),(summon), pos (25,1),(\n), pos (25,7),(unlock), pos (26,1),(\n), pos (26,7),(world), pos (27,1),(\n), pos (27,6),(of), pos (28,1),(\n), pos (28,3),(Win), pos (29,1),(\n), pos (29,4),(Lose), pos (30,1),(\n), pos (30,5),(.~), pos (31,1),(\n), pos (31,3),(//), pos (32,1),(\n), pos (32,3),(||), pos (33,1),(\n), pos (33,3),(&&), pos (34,1),(\n), pos (34,3),(<=), pos (35,1),(\n), pos (35,3),(==), pos (36,1),(\n), pos (36,3),(!=), pos (37,1),(\n), pos (37,3),(>=), pos (38,1),(\n), pos (38,3),(<<), pos (39,1),(\n), pos (39,3),(>>), pos (40,1),(\n), pos (40,3),(++), pos (41,1),(\n), pos (41,3),(--), pos (42,1),(\n), pos (42,3),(<-), pos (43,1),(\n), pos (43,3),(->), pos (44,1),(\n), pos (44,3),(|}), pos (45,1),(\n), pos (45,3),({|), pos (46,1),(\n), pos (46,3),(+), pos (47,1),(\n), pos (47,2),(-), pos (48,1),(\n), pos (48,2),(*), pos (49,1),(\n), pos (49,2),(/), pos (50,1),(\n), pos (50,2),(%), pos (51,1),(\n), pos (51,2),(#), pos (52,1),(\n), pos (52,2),(?), pos (53,1),(\n), pos (53,2),(!), pos (54,1),(\n), pos (54,2),(<), pos (55,1),(\n), pos (55,2),(>), pos (56,1),(\n), pos (56,2),((), pos (57,1),(\n), pos (57,2),()), pos (58,1),(\n), pos (58,2),({), pos (59,1),(\n), pos (59,2),(}), pos (60,1),(\n), pos (60,2),(,), pos (61,1),(\n), pos (61,2),(:), pos (62,1),(\n), pos (62,2),(|), pos (63,1),(\n), pos (63,2),(=), pos (64,1),(\n), pos (64,2),Identificador \"a1\", pos (65,1),(\n), pos (65,3),Identificador de tipo \"A1\", pos (66,1),(\n), pos (66,3),Identificador \"aA1\", pos (67,1),(\n), pos (67,4),Identificador de tipo \"Aa1\", pos (68,1),(\n), pos (68,4),Entero 3, pos (69,1),Identificador \"a1\", pos (69,2),(\n), pos (69,4),Identificador \"nombre\", pos (70,1),Identificador \"programa\", pos (70,8),Identificador \"a1\", pos (70,17),(\n), pos (70,19),Identificador \"nombre\", pos (71,1),Identificador \"programa\", pos (71,8),Identificador de tipo \"A1\", pos (71,17),(\n), pos (71,19),Identificador \"nombre\", pos (72,1),Identificador \"programa\", pos (72,8),Identificador \"aA1\", pos (72,17),(\n), pos (72,20),Identificador \"nombre\", pos (73,1),Identificador \"programa\", pos (73,8),Identificador de tipo \"Aa1\", pos (73,17),(\n), pos (73,20),Entero 000000000000000001, pos (74,1),(\n), pos (74,19),Flotante 000000000001'0000000000000000000000001, pos (75,1),(\n), pos (75,39),(\n), pos (76,31),(\n), pos (77,13),String \"~String~\", pos (78,1),(\n), pos (78,9),Caracter '*c*', pos (79,1),(\n), pos (79,4),Identificador \"test1\", pos (80,1),(\n), pos (80,6),Identificador \"yes_we_can\", pos (81,1),(\n), pos (81,11),Identificador \"maybe'not\", pos (82,1),(\n), pos (82,10),Entero 1, pos (83,1),(\n), pos (83,2),Identificador \"test1\", pos (84,1),(\n), pos (84,6),Identificador \"maybe\", pos (85,1),Identificador \"not\", pos (85,7)]"

caracteresInvalidos :: String
caracteresInvalidos = "\"\n$\n&\n\n'\n;\n[\n\\\n]\n_\n`\n~"

caracteresInvalidos' :: String
caracteresInvalidos' = "[\",(\n), pos (1,2),$,(\n), pos (2,2),&,(\n), pos (3,2),',(\n), pos (5,2),;,(\n), pos (6,2),[,(\n), pos (7,2),\\,(\n), pos (8,2),],(\n), pos (9,2),_,(\n), pos (10,2),`,(\n), pos (11,2),~]"

comentariosStrings :: String
comentariosStrings = "~ esto es un String ~\n\"' esto es un comentario\n de varias lineas *******\n'\"\n*\\n*\n~\\*\\*~\n\n: @Comentario\n"

comentariosStrings' :: String
comentariosStrings' = "[String \"~ esto es un String ~\", pos (1,1),(\n), pos (1,22),(\n), pos (4,3),Caracter '*\n*', pos (5,1),(\n), pos (6,2),String \"~\\*\\*~\", pos (7,1),(\n), pos (7,7),(:), pos (9,1),(\n), pos (9,14)]"

caracteres :: String
caracteres = "*!*\n*\"*\n*#*\n*$*\n*%*\n*&*\n*'*\n*(*\n*)*\n*\\**\n*+*\n*,*\n*-*\n*.*\n*/*\n*0*\n*1*\n*2*\n*3*\n*4*\n*5*\n*6*\n*7*\n*8*\n*9*\n*:*\n*;*\n*<*\n*=*\n*>*\n*?*\n*@*\n*A*\n*B*\n*C*\n*D*\n*E*\n*F*\n*G*\n*H*\n*I*\n*J*\n*K*\n*L*\n*M*\n*N*\n*O*\n*P*\n*Q*\n*R*\n*S*\n*T*\n*U*\n*V*\n*W*\n*X*\n*Y*\n*Z*\n*[*\n*\\\\*\n*]*\n*^*\n*_*\n*`*\n*a*\n*b*\n*c*\n*d*\n*e*\n*f*\n*g*\n*h*\n*i*\n*j*\n*k*\n*l*\n*m*\n*n*\n*o*\n*p*\n*q*\n*r*\n*s*\n*t*\n*u*\n*v*\n*w*\n*x*\n*y*\n*z*\n*{*\n*|*\n*}*\n*\\~*\n* *"

caracteres' :: String
caracteres' = "[Caracter '*!*', pos (1,1),(\n), pos (1,4),Caracter '*\"*', pos (2,1),(\n), pos (2,4),Caracter '*#*', pos (3,1),(\n), pos (3,4),Caracter '*$*', pos (4,1),(\n), pos (4,4),Caracter '*%*', pos (5,1),(\n), pos (5,4),Caracter '*&*', pos (6,1),(\n), pos (6,4),Caracter '*'*', pos (7,1),(\n), pos (7,4),Caracter '*(*', pos (8,1),(\n), pos (8,4),Caracter '*)*', pos (9,1),(\n), pos (9,4),Caracter '*\\**', pos (10,1),(\n), pos (10,5),Caracter '*+*', pos (11,1),(\n), pos (11,4),Caracter '*,*', pos (12,1),(\n), pos (12,4),Caracter '*-*', pos (13,1),(\n), pos (13,4),Caracter '*.*', pos (14,1),(\n), pos (14,4),Caracter '*/*', pos (15,1),(\n), pos (15,4),Caracter '*0*', pos (16,1),(\n), pos (16,4),Caracter '*1*', pos (17,1),(\n), pos (17,4),Caracter '*2*', pos (18,1),(\n), pos (18,4),Caracter '*3*', pos (19,1),(\n), pos (19,4),Caracter '*4*', pos (20,1),(\n), pos (20,4),Caracter '*5*', pos (21,1),(\n), pos (21,4),Caracter '*6*', pos (22,1),(\n), pos (22,4),Caracter '*7*', pos (23,1),(\n), pos (23,4),Caracter '*8*', pos (24,1),(\n), pos (24,4),Caracter '*9*', pos (25,1),(\n), pos (25,4),Caracter '*:*', pos (26,1),(\n), pos (26,4),Caracter '*;*', pos (27,1),(\n), pos (27,4),Caracter '*<*', pos (28,1),(\n), pos (28,4),Caracter '*=*', pos (29,1),(\n), pos (29,4),Caracter '*>*', pos (30,1),(\n), pos (30,4),Caracter '*?*', pos (31,1),(\n), pos (31,4),Caracter '*@*', pos (32,1),(\n), pos (32,4),Caracter '*A*', pos (33,1),(\n), pos (33,4),Caracter '*B*', pos (34,1),(\n), pos (34,4),Caracter '*C*', pos (35,1),(\n), pos (35,4),Caracter '*D*', pos (36,1),(\n), pos (36,4),Caracter '*E*', pos (37,1),(\n), pos (37,4),Caracter '*F*', pos (38,1),(\n), pos (38,4),Caracter '*G*', pos (39,1),(\n), pos (39,4),Caracter '*H*', pos (40,1),(\n), pos (40,4),Caracter '*I*', pos (41,1),(\n), pos (41,4),Caracter '*J*', pos (42,1),(\n), pos (42,4),Caracter '*K*', pos (43,1),(\n), pos (43,4),Caracter '*L*', pos (44,1),(\n), pos (44,4),Caracter '*M*', pos (45,1),(\n), pos (45,4),Caracter '*N*', pos (46,1),(\n), pos (46,4),Caracter '*O*', pos (47,1),(\n), pos (47,4),Caracter '*P*', pos (48,1),(\n), pos (48,4),Caracter '*Q*', pos (49,1),(\n), pos (49,4),Caracter '*R*', pos (50,1),(\n), pos (50,4),Caracter '*S*', pos (51,1),(\n), pos (51,4),Caracter '*T*', pos (52,1),(\n), pos (52,4),Caracter '*U*', pos (53,1),(\n), pos (53,4),Caracter '*V*', pos (54,1),(\n), pos (54,4),Caracter '*W*', pos (55,1),(\n), pos (55,4),Caracter '*X*', pos (56,1),(\n), pos (56,4),Caracter '*Y*', pos (57,1),(\n), pos (57,4),Caracter '*Z*', pos (58,1),(\n), pos (58,4),Caracter '*[*', pos (59,1),(\n), pos (59,4),Caracter '*\\*', pos (60,1),(\n), pos (60,5),Caracter '*]*', pos (61,1),(\n), pos (61,4),Caracter '*^*', pos (62,1),(\n), pos (62,4),Caracter '*_*', pos (63,1),(\n), pos (63,4),Caracter '*`*', pos (64,1),(\n), pos (64,4),Caracter '*a*', pos (65,1),(\n), pos (65,4),Caracter '*b*', pos (66,1),(\n), pos (66,4),Caracter '*c*', pos (67,1),(\n), pos (67,4),Caracter '*d*', pos (68,1),(\n), pos (68,4),Caracter '*e*', pos (69,1),(\n), pos (69,4),Caracter '*f*', pos (70,1),(\n), pos (70,4),Caracter '*g*', pos (71,1),(\n), pos (71,4),Caracter '*h*', pos (72,1),(\n), pos (72,4),Caracter '*i*', pos (73,1),(\n), pos (73,4),Caracter '*j*', pos (74,1),(\n), pos (74,4),Caracter '*k*', pos (75,1),(\n), pos (75,4),Caracter '*l*', pos (76,1),(\n), pos (76,4),Caracter '*m*', pos (77,1),(\n), pos (77,4),Caracter '*n*', pos (78,1),(\n), pos (78,4),Caracter '*o*', pos (79,1),(\n), pos (79,4),Caracter '*p*', pos (80,1),(\n), pos (80,4),Caracter '*q*', pos (81,1),(\n), pos (81,4),Caracter '*r*', pos (82,1),(\n), pos (82,4),Caracter '*s*', pos (83,1),(\n), pos (83,4),Caracter '*t*', pos (84,1),(\n), pos (84,4),Caracter '*u*', pos (85,1),(\n), pos (85,4),Caracter '*v*', pos (86,1),(\n), pos (86,4),Caracter '*w*', pos (87,1),(\n), pos (87,4),Caracter '*x*', pos (88,1),(\n), pos (88,4),Caracter '*y*', pos (89,1),(\n), pos (89,4),Caracter '*z*', pos (90,1),(\n), pos (90,4),Caracter '*{*', pos (91,1),(\n), pos (91,4),Caracter '*|*', pos (92,1),(\n), pos (92,4),Caracter '*}*', pos (93,1),(\n), pos (93,4),Caracter '*\\~*', pos (94,1),(\n), pos (94,5),Caracter '* *', pos (95,1)]"

strings :: String
strings = "~!~\n~\"~\n~#~\n~$~\n~%~\n~&~\n~'~\n~(~\n~)~\n~\\*~\n~+~\n~,~\n~-~\n~.~\n~/~\n~0~\n~1~\n~2~\n~3~\n~4~\n~5~\n~6~\n~7~\n~8~\n~9~\n~:~\n~;~\n~<~\n~=~\n~>~\n~?~\n~@~\n~A~\n~B~\n~C~\n~D~\n~E~\n~F~\n~G~\n~H~\n~I~\n~J~\n~K~\n~L~\n~M~\n~N~\n~O~\n~P~\n~Q~\n~R~\n~S~\n~T~\n~U~\n~V~\n~W~\n~X~\n~Y~\n~Z~\n~[~\n~\\\\~\n~]~\n~^~\n~_~\n~`~\n~a~\n~b~\n~c~\n~d~\n~e~\n~f~\n~g~\n~h~\n~i~\n~j~\n~k~\n~l~\n~m~\n~n~\n~o~\n~p~\n~q~\n~r~\n~s~\n~t~\n~u~\n~v~\n~w~\n~x~\n~y~\n~z~\n~{~\n~|~\n~}~\n~\\~~\n~ ~"

strings' :: String
strings' = "[String \"~!~\", pos (1,1),(\n), pos (1,4),String \"~\"~\", pos (2,1),(\n), pos (2,4),String \"~#~\", pos (3,1),(\n), pos (3,4),String \"~$~\", pos (4,1),(\n), pos (4,4),String \"~%~\", pos (5,1),(\n), pos (5,4),String \"~&~\", pos (6,1),(\n), pos (6,4),String \"~'~\", pos (7,1),(\n), pos (7,4),String \"~(~\", pos (8,1),(\n), pos (8,4),String \"~)~\", pos (9,1),(\n), pos (9,4),String \"~\\*~\", pos (10,1),(\n), pos (10,5),String \"~+~\", pos (11,1),(\n), pos (11,4),String \"~,~\", pos (12,1),(\n), pos (12,4),String \"~-~\", pos (13,1),(\n), pos (13,4),String \"~.~\", pos (14,1),(\n), pos (14,4),String \"~/~\", pos (15,1),(\n), pos (15,4),String \"~0~\", pos (16,1),(\n), pos (16,4),String \"~1~\", pos (17,1),(\n), pos (17,4),String \"~2~\", pos (18,1),(\n), pos (18,4),String \"~3~\", pos (19,1),(\n), pos (19,4),String \"~4~\", pos (20,1),(\n), pos (20,4),String \"~5~\", pos (21,1),(\n), pos (21,4),String \"~6~\", pos (22,1),(\n), pos (22,4),String \"~7~\", pos (23,1),(\n), pos (23,4),String \"~8~\", pos (24,1),(\n), pos (24,4),String \"~9~\", pos (25,1),(\n), pos (25,4),String \"~:~\", pos (26,1),(\n), pos (26,4),String \"~;~\", pos (27,1),(\n), pos (27,4),String \"~<~\", pos (28,1),(\n), pos (28,4),String \"~=~\", pos (29,1),(\n), pos (29,4),String \"~>~\", pos (30,1),(\n), pos (30,4),String \"~?~\", pos (31,1),(\n), pos (31,4),String \"~@~\", pos (32,1),(\n), pos (32,4),String \"~A~\", pos (33,1),(\n), pos (33,4),String \"~B~\", pos (34,1),(\n), pos (34,4),String \"~C~\", pos (35,1),(\n), pos (35,4),String \"~D~\", pos (36,1),(\n), pos (36,4),String \"~E~\", pos (37,1),(\n), pos (37,4),String \"~F~\", pos (38,1),(\n), pos (38,4),String \"~G~\", pos (39,1),(\n), pos (39,4),String \"~H~\", pos (40,1),(\n), pos (40,4),String \"~I~\", pos (41,1),(\n), pos (41,4),String \"~J~\", pos (42,1),(\n), pos (42,4),String \"~K~\", pos (43,1),(\n), pos (43,4),String \"~L~\", pos (44,1),(\n), pos (44,4),String \"~M~\", pos (45,1),(\n), pos (45,4),String \"~N~\", pos (46,1),(\n), pos (46,4),String \"~O~\", pos (47,1),(\n), pos (47,4),String \"~P~\", pos (48,1),(\n), pos (48,4),String \"~Q~\", pos (49,1),(\n), pos (49,4),String \"~R~\", pos (50,1),(\n), pos (50,4),String \"~S~\", pos (51,1),(\n), pos (51,4),String \"~T~\", pos (52,1),(\n), pos (52,4),String \"~U~\", pos (53,1),(\n), pos (53,4),String \"~V~\", pos (54,1),(\n), pos (54,4),String \"~W~\", pos (55,1),(\n), pos (55,4),String \"~X~\", pos (56,1),(\n), pos (56,4),String \"~Y~\", pos (57,1),(\n), pos (57,4),String \"~Z~\", pos (58,1),(\n), pos (58,4),String \"~[~\", pos (59,1),(\n), pos (59,4),String \"~\\~\", pos (60,1),(\n), pos (60,5),String \"~]~\", pos (61,1),(\n), pos (61,4),String \"~^~\", pos (62,1),(\n), pos (62,4),String \"~_~\", pos (63,1),(\n), pos (63,4),String \"~`~\", pos (64,1),(\n), pos (64,4),String \"~a~\", pos (65,1),(\n), pos (65,4),String \"~b~\", pos (66,1),(\n), pos (66,4),String \"~c~\", pos (67,1),(\n), pos (67,4),String \"~d~\", pos (68,1),(\n), pos (68,4),String \"~e~\", pos (69,1),(\n), pos (69,4),String \"~f~\", pos (70,1),(\n), pos (70,4),String \"~g~\", pos (71,1),(\n), pos (71,4),String \"~h~\", pos (72,1),(\n), pos (72,4),String \"~i~\", pos (73,1),(\n), pos (73,4),String \"~j~\", pos (74,1),(\n), pos (74,4),String \"~k~\", pos (75,1),(\n), pos (75,4),String \"~l~\", pos (76,1),(\n), pos (76,4),String \"~m~\", pos (77,1),(\n), pos (77,4),String \"~n~\", pos (78,1),(\n), pos (78,4),String \"~o~\", pos (79,1),(\n), pos (79,4),String \"~p~\", pos (80,1),(\n), pos (80,4),String \"~q~\", pos (81,1),(\n), pos (81,4),String \"~r~\", pos (82,1),(\n), pos (82,4),String \"~s~\", pos (83,1),(\n), pos (83,4),String \"~t~\", pos (84,1),(\n), pos (84,4),String \"~u~\", pos (85,1),(\n), pos (85,4),String \"~v~\", pos (86,1),(\n), pos (86,4),String \"~w~\", pos (87,1),(\n), pos (87,4),String \"~x~\", pos (88,1),(\n), pos (88,4),String \"~y~\", pos (89,1),(\n), pos (89,4),String \"~z~\", pos (90,1),(\n), pos (90,4),String \"~{~\", pos (91,1),(\n), pos (91,4),String \"~|~\", pos (92,1),(\n), pos (92,4),String \"~}~\", pos (93,1),(\n), pos (93,4),String \"~\\~~\", pos (94,1),(\n), pos (94,5),String \"~ ~\", pos (95,1)]"

arreglos :: String
arreglos = "Rune|}01234567890{| = a1\nRunes|}0{| a2 = |}~Natascha~, ~Francisco~, ~Manuel~{|\n\nSkill|}1{| indices = |}3'67, 3'20, 3'0{|\nRune|}2{| indices = |}*a*,*b*,*c*{|\nPower|}3{| indices = |}0,1,2,3,4,5,6,7,8,9,0{|\nBattle|}2{| indices = |}Lose,Win{|\n\n#indices\n"

arreglos' :: String
arreglos' = "[(Rune), pos (1,1),(|}), pos (1,5),Entero 01234567890, pos (1,7),({|), pos (1,18),(=), pos (1,21),Identificador \"a1\", pos (1,23),(\n), pos (1,25),(Runes), pos (2,1),(|}), pos (2,6),Entero 0, pos (2,8),({|), pos (2,9),Identificador \"a2\", pos (2,12),(=), pos (2,15),(|}), pos (2,17),String \"~Natascha~\", pos (2,19),(,), pos (2,29),String \"~Francisco~\", pos (2,31),(,), pos (2,42),String \"~Manuel~\", pos (2,44),({|), pos (2,52),(\n), pos (2,54),(Skill), pos (4,1),(|}), pos (4,6),Entero 1, pos (4,8),({|), pos (4,9),Identificador \"indices\", pos (4,12),(=), pos (4,20),(|}), pos (4,22),Flotante 3'67, pos (4,24),(,), pos (4,28),Flotante 3'20, pos (4,30),(,), pos (4,34),Flotante 3'0, pos (4,36),({|), pos (4,39),(\n), pos (4,41),(Rune), pos (5,1),(|}), pos (5,5),Entero 2, pos (5,7),({|), pos (5,8),Identificador \"indices\", pos (5,11),(=), pos (5,19),(|}), pos (5,21),Caracter '*a*', pos (5,23),(,), pos (5,26),Caracter '*b*', pos (5,27),(,), pos (5,30),Caracter '*c*', pos (5,31),({|), pos (5,34),(\n), pos (5,36),(Power), pos (6,1),(|}), pos (6,6),Entero 3, pos (6,8),({|), pos (6,9),Identificador \"indices\", pos (6,12),(=), pos (6,20),(|}), pos (6,22),Entero 0, pos (6,24),(,), pos (6,25),Entero 1, pos (6,26),(,), pos (6,27),Entero 2, pos (6,28),(,), pos (6,29),Entero 3, pos (6,30),(,), pos (6,31),Entero 4, pos (6,32),(,), pos (6,33),Entero 5, pos (6,34),(,), pos (6,35),Entero 6, pos (6,36),(,), pos (6,37),Entero 7, pos (6,38),(,), pos (6,39),Entero 8, pos (6,40),(,), pos (6,41),Entero 9, pos (6,42),(,), pos (6,43),Entero 0, pos (6,44),({|), pos (6,45),(\n), pos (6,47),(Battle), pos (7,1),(|}), pos (7,7),Entero 2, pos (7,9),({|), pos (7,10),Identificador \"indices\", pos (7,13),(=), pos (7,21),(|}), pos (7,23),(Lose), pos (7,25),(,), pos (7,29),(Win), pos (7,30),({|), pos (7,33),(\n), pos (7,35),(#), pos (9,1),Identificador \"indices\", pos (9,2),(\n), pos (9,9)]"

booleanos :: String
booleanos = "Battle bool1 = Win\nBattle bool2 = Lose\nBattle bool3\n\nbool1   >=  bool2\nbool1   >   bool2\nbool1   <=  bool2\nbool1   <   bool2\nbool1   ==  bool2\nbool1   ||  bool2\nbool1   &&  bool2\nbool1 = bool2\nbool1 != bool2\n!bool1\n"

booleanos' :: String
booleanos' = "[(Battle), pos (1,1),Identificador \"bool1\", pos (1,8),(=), pos (1,14),(Win), pos (1,16),(\n), pos (1,19),(Battle), pos (2,1),Identificador \"bool2\", pos (2,8),(=), pos (2,14),(Lose), pos (2,16),(\n), pos (2,20),(Battle), pos (3,1),Identificador \"bool3\", pos (3,8),(\n), pos (3,13),Identificador \"bool1\", pos (5,1),(>=), pos (5,9),Identificador \"bool2\", pos (5,13),(\n), pos (5,18),Identificador \"bool1\", pos (6,1),(>), pos (6,9),Identificador \"bool2\", pos (6,13),(\n), pos (6,18),Identificador \"bool1\", pos (7,1),(<=), pos (7,9),Identificador \"bool2\", pos (7,13),(\n), pos (7,18),Identificador \"bool1\", pos (8,1),(<), pos (8,9),Identificador \"bool2\", pos (8,13),(\n), pos (8,18),Identificador \"bool1\", pos (9,1),(==), pos (9,9),Identificador \"bool2\", pos (9,13),(\n), pos (9,18),Identificador \"bool1\", pos (10,1),(||), pos (10,9),Identificador \"bool2\", pos (10,13),(\n), pos (10,18),Identificador \"bool1\", pos (11,1),(&&), pos (11,9),Identificador \"bool2\", pos (11,13),(\n), pos (11,18),Identificador \"bool1\", pos (12,1),(=), pos (12,7),Identificador \"bool2\", pos (12,9),(\n), pos (12,14),Identificador \"bool1\", pos (13,1),(!=), pos (13,7),Identificador \"bool2\", pos (13,10),(\n), pos (13,15),(!), pos (14,1),Identificador \"bool1\", pos (14,2),(\n), pos (14,7)]"

enteros :: String
enteros = "Power a1 = 1234567890\nPower a2 = 20\nPower a3 = 0123456789\n\na1  +   12\na1  +   a2\n12  +   a1\n\na1  -   12\na1  -   a2\n12  -   a1\n\na1  *   12\na1  *   a2\n12  *   a1\n\na1  /   12\na1  /   a2\n12  /   a1\n\na1  //   12\na1  //   a2\n12  //   a1\n\na1  %   12\na1  %   a2\n12  %   a1\n\n-12\n-a1\n"

enteros' :: String
enteros' = "[(Power), pos (1,1),Identificador \"a1\", pos (1,7),(=), pos (1,10),Entero 1234567890, pos (1,12),(\n), pos (1,22),(Power), pos (2,1),Identificador \"a2\", pos (2,7),(=), pos (2,10),Entero 20, pos (2,12),(\n), pos (2,14),(Power), pos (3,1),Identificador \"a3\", pos (3,7),(=), pos (3,10),Entero 0123456789, pos (3,12),(\n), pos (3,22),Identificador \"a1\", pos (5,1),(+), pos (5,5),Entero 12, pos (5,9),(\n), pos (5,11),Identificador \"a1\", pos (6,1),(+), pos (6,5),Identificador \"a2\", pos (6,9),(\n), pos (6,11),Entero 12, pos (7,1),(+), pos (7,5),Identificador \"a1\", pos (7,9),(\n), pos (7,11),Identificador \"a1\", pos (9,1),(-), pos (9,5),Entero 12, pos (9,9),(\n), pos (9,11),Identificador \"a1\", pos (10,1),(-), pos (10,5),Identificador \"a2\", pos (10,9),(\n), pos (10,11),Entero 12, pos (11,1),(-), pos (11,5),Identificador \"a1\", pos (11,9),(\n), pos (11,11),Identificador \"a1\", pos (13,1),(*), pos (13,5),Entero 12, pos (13,9),(\n), pos (13,11),Identificador \"a1\", pos (14,1),(*), pos (14,5),Identificador \"a2\", pos (14,9),(\n), pos (14,11),Entero 12, pos (15,1),(*), pos (15,5),Identificador \"a1\", pos (15,9),(\n), pos (15,11),Identificador \"a1\", pos (17,1),(/), pos (17,5),Entero 12, pos (17,9),(\n), pos (17,11),Identificador \"a1\", pos (18,1),(/), pos (18,5),Identificador \"a2\", pos (18,9),(\n), pos (18,11),Entero 12, pos (19,1),(/), pos (19,5),Identificador \"a1\", pos (19,9),(\n), pos (19,11),Identificador \"a1\", pos (21,1),(//), pos (21,5),Entero 12, pos (21,10),(\n), pos (21,12),Identificador \"a1\", pos (22,1),(//), pos (22,5),Identificador \"a2\", pos (22,10),(\n), pos (22,12),Entero 12, pos (23,1),(//), pos (23,5),Identificador \"a1\", pos (23,10),(\n), pos (23,12),Identificador \"a1\", pos (25,1),(%), pos (25,5),Entero 12, pos (25,9),(\n), pos (25,11),Identificador \"a1\", pos (26,1),(%), pos (26,5),Identificador \"a2\", pos (26,9),(\n), pos (26,11),Entero 12, pos (27,1),(%), pos (27,5),Identificador \"a1\", pos (27,9),(\n), pos (27,11),(-), pos (29,1),Entero 12, pos (29,2),(\n), pos (29,4),(-), pos (30,1),Identificador \"a1\", pos (30,2),(\n), pos (30,4)]"

flotantes :: String
flotantes = "Skill fl1 = 2'5\nSkill fl2 = 2'000\nSkill fl3 = 02'000\nSkill fl4 = 02\n\n"

flotantes' :: String
flotantes' = "[(Skill), pos (1,1),Identificador \"fl1\", pos (1,7),(=), pos (1,11),Flotante 2'5, pos (1,13),(\n), pos (1,16),(Skill), pos (2,1),Identificador \"fl2\", pos (2,7),(=), pos (2,11),Flotante 2'000, pos (2,13),(\n), pos (2,18),(Skill), pos (3,1),Identificador \"fl3\", pos (3,7),(=), pos (3,11),Flotante 02'000, pos (3,13),(\n), pos (3,19),(Skill), pos (4,1),Identificador \"fl4\", pos (4,7),(=), pos (4,11),Entero 02, pos (4,13),(\n), pos (4,15)]"

nombres :: String
nombres = "a0123456789\na91248619906153209213\nahga672ghas61mklas01an18\nAhs7sad2daDs128sd'd621Das1\na_b'c_d'e_f'g_h'i_j'k_l'm_n'opqrstuvwxyz0123456789ABCDFGHIJKLMNOPQRSTUVWXYZ_'\nworld\nWin\nLose\nBattle\nLose\nPower\nRune\nSkill\nKit\nof\nInventory\nspawn\ndrop\nItems\nkill\npuff\nsummon\nfree\njoystick\nButton\ncontroller\nlock\nplay\ngameOver\nkeepPlaying\nmonster\nboss\nunlock\n"

nombres' :: String
nombres' = "[Identificador \"a0123456789\", pos (1,1),(\n), pos (1,12),Identificador \"a91248619906153209213\", pos (2,1),(\n), pos (2,22),Identificador \"ahga672ghas61mklas01an18\", pos (3,1),(\n), pos (3,25),Identificador de tipo \"Ahs7sad2daDs128sd'd621Das1\", pos (4,1),(\n), pos (4,27),Identificador \"a_b'c_d'e_f'g_h'i_j'k_l'm_n'opqrstuvwxyz0123456789ABCDFGHIJKLMNOPQRSTUVWXYZ_'\", pos (5,1),(\n), pos (5,78),(world), pos (6,1),(\n), pos (6,6),(Win), pos (7,1),(\n), pos (7,4),(Lose), pos (8,1),(\n), pos (8,5),(Battle), pos (9,1),(\n), pos (9,7),(Lose), pos (10,1),(\n), pos (10,5),(Power), pos (11,1),(\n), pos (11,6),(Rune), pos (12,1),(\n), pos (12,5),(Skill), pos (13,1),(\n), pos (13,6),(Kit), pos (14,1),(\n), pos (14,4),(of), pos (15,1),(\n), pos (15,3),(Inventory), pos (16,1),(\n), pos (16,10),(spawn), pos (17,1),(\n), pos (17,6),(drop), pos (18,1),(\n), pos (18,5),(Items), pos (19,1),(\n), pos (19,6),(kill), pos (20,1),(\n), pos (20,5),(puff), pos (21,1),(\n), pos (21,5),(summon), pos (22,1),(\n), pos (22,7),(free), pos (23,1),(\n), pos (23,5),(joystick), pos (24,1),(\n), pos (24,9),(Button), pos (25,1),(\n), pos (25,7),(controller), pos (26,1),(\n), pos (26,11),(lock), pos (27,1),(\n), pos (27,5),(play), pos (28,1),(\n), pos (28,5),(gameOver), pos (29,1),(\n), pos (29,9),(keepPlaying), pos (30,1),(\n), pos (30,12),(monster), pos (31,1),(\n), pos (31,8),(boss), pos (32,1),(\n), pos (32,5),(unlock), pos (33,1),(\n), pos (33,7)]"

stringsOp :: String
stringsOp = "Runes s1 = ~Hola1~\nRunes s2 = ~\\*Hola\n1~\nRunes s3 = ~Hola2~\nRunes|}5{| s351 = ~Hola2~\nRunes|}5{| s352 = |}*H*,*o*,*l*,*a*,*2*{|\nRunes s4 = ~Hola2\n~\nRunes s5 = ~Hey!, Como estas?~\n\n\nPower length = #s1\n\nRune h = s1|}0{|\n"

stringsOp' :: String
stringsOp' = "[(Runes), pos (1,1),Identificador \"s1\", pos (1,7),(=), pos (1,10),String \"~Hola1~\", pos (1,12),(\n), pos (1,19),(Runes), pos (2,1),Identificador \"s2\", pos (2,7),(=), pos (2,10),String \"~\\*Hola 1~\", pos (2,12),(\n), pos (3,3),(Runes), pos (4,1),Identificador \"s3\", pos (4,7),(=), pos (4,10),String \"~Hola2~\", pos (4,12),(\n), pos (4,19),(Runes), pos (5,1),(|}), pos (5,6),Entero 5, pos (5,8),({|), pos (5,9),Identificador \"s351\", pos (5,12),(=), pos (5,17),String \"~Hola2~\", pos (5,19),(\n), pos (5,26),(Runes), pos (6,1),(|}), pos (6,6),Entero 5, pos (6,8),({|), pos (6,9),Identificador \"s352\", pos (6,12),(=), pos (6,17),(|}), pos (6,19),Caracter '*H*', pos (6,21),(,), pos (6,24),Caracter '*o*', pos (6,25),(,), pos (6,28),Caracter '*l*', pos (6,29),(,), pos (6,32),Caracter '*a*', pos (6,33),(,), pos (6,36),Caracter '*2*', pos (6,37),({|), pos (6,40),(\n), pos (6,42),(Runes), pos (7,1),Identificador \"s4\", pos (7,7),(=), pos (7,10),String \"~Hola2~\", pos (7,12),(\n), pos (8,2),(Runes), pos (9,1),Identificador \"s5\", pos (9,7),(=), pos (9,10),String \"~Hey!, Como estas?~\", pos (9,12),(\n), pos (9,31),(Power), pos (12,1),Identificador \"length\", pos (12,7),(=), pos (12,14),(#), pos (12,16),Identificador \"s1\", pos (12,17),(\n), pos (12,19),(Rune), pos (14,1),Identificador \"h\", pos (14,6),(=), pos (14,8),Identificador \"s1\", pos (14,10),(|}), pos (14,12),Entero 0, pos (14,14),({|), pos (14,15),(\n), pos (14,17)]"


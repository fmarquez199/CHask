"'******************************************************************************
*
*                           Este caso de prueba deberia compilar!
*
*                           Tester: Manuel Gonzalez
*                           Lenguaje: Playit
* 
* 
******************************************************************************'"
Inventory PrimerNombre2:
    Skill flotante
    Power entero
.~
Inventory Nombre2:
    PrimerNombre2 puff regpn
.~
Inventory Contacto2:
    Nombre2 regnombre
    Skill flotante
.~
Inventory Contacto3:
    Nombre2 puff pointernombre
    Power|}3{| arraypower
.~


Inventory PrimerNombre:
  Runes nombre
.~

Inventory Nombre:
    PrimerNombre n
.~

Inventory Contacto:
  Nombre n
  Kit of Kit of Power lista1 = << <<2,3>> , <<1,2>>  >>
  Power|}2{| enteros1,enteros2 = |)2,3(|
  Rune ast1 = *\** , m1 , a1=*a*,n1=*n*,u1=*u*,ast2 = *\**, tip
.~

boss f2():
.~

monster f3() Contacto:
.~
monster f(Power p11,Contacto? c11,Contacto c221,Runes c3) Contacto:
.~

world %caso_malicia'M'%: 

    Rune ast1 = *\** , m1 , a1=*a*,n1=*n*,u1=*u*,ast2 = *\** 

    m1 = *M*     @ Asignacion niangara yo no me imprimo L$OL

    Battle b1 = Win , b2=Lose 
    Battle b3 
    Battle b4 = (b1 && b2) || b3,b5 = (2 > 3)? Win:Lose

    Power a2 = 0,b20 = 1
    Power c2 = a2 + 1,d2 = a2*2

    Skill a3 = 1,b31 = 1'0,abc = c2 + 1,d3 = 2'1
  Battle listab1 = <<2>> == <<>>
  Battle listab2 = <<>> == <<>>
  Battle listab3 = <<>> == <<2>>
  Battle listab3'1 = <<<<>>>> == <<<<2>>>>

  Battle listab4 = <<2>> == <<>>
  Battle listab5 = (2:<<>>) == <<>>
  Battle listab6 = <<>>::<<>> == <<>>
  Battle listab7 = <<2>>::<<>> == <<2>>
  Battle listab8 = <<>>::<<3>> == <<3>>
  Battle listab8'1 = (<<2>>:<<<<3>>>>) == <<<<2>>,<<3>>>>
  Battle listab9 = <<<<>>>> == <<<<2>>>>
  Battle listab10 = (<<>>:<<<<2>>>>) == <<<<>>,<<2>>>>
  Battle listab11 = <<<<>>>> == <<<<>>>>

    Contacto3 nombre
    
    Contacto3 puff test = summon Contacto3
    PrimerNombre2 puff test2 = summon PrimerNombre2
    
    puff(puff(puff test spawn pointernombre) spawn regpn) spawn entero = puff(puff(puff test spawn pointernombre) spawn regpn) spawn entero + nombre spawn arraypower|)0(|

    
    Power|}3{| hola1
    Power|}3{| hola2
    
    hola1 = hola2
    
    test = summon Contacto3
    
    puff test = nombre
    
    nombre = nombre
    
    Kit of Power hola3
    
    hola3 = (2 + 1):hola3
    hola3 = (hola1|)0(| + puff(puff(puff test spawn pointernombre) spawn regpn) spawn entero):hola3
    hola3 = puff(puff(puff test spawn pointernombre) spawn regpn) spawn entero:hola3


    
    a3 = a3
    
    Power |}2{| abc2

    Power|}2{| enteros1,enteros2 = |)c2 + 2,(abc2|)0(| + 2 ) * (b2? a2 + 1 : abc2|)abc2|)2(| - 1(|) (|
    

    abc2|)0(| = 0

    abc2|)1(| = 1

    
    Kit of Kit of Power lista1 = << <<a2,a2>> , <<a2,a2>>  >>
    
    lista1|>0<||>0<| = 240

    
    Kit of Power l1 = <<1,2,3,4,4>>
    Contacto c = Contacto {<<l1,l1>>, a2}
    @c spawn n spawn n spawn nombre = joystick ~Dame un nombre YEH NOW BB~
    @c spawn lista1|>2<||>1<| = joystick ~HEY LOL~
    @c spawn lista1|>2<||>1<| = joystick ~HEY LOL~
    @c spawn tip = *c*    
        
    Power puff p = summon Power
    
    puff p = (b2? a2 + 1 : abc2|>3 - 1<|)
    
    puff p = 15
    
    free p
    
    Power|}2{| puff p2 = summon Power
    
    puff p2|>0<| = 21
    
    free|}{| p2
    
    Kit of Power l2 "'= <<1,2,3,4,4>>'" = <<>>
    
        
    Kit of Power puff plista3 = summon Kit of Power @jejelol
    Kit of Power puff plista4 = summon Kit of Power @jejelol
    
    puff plista3 = 2:<<>>::<<>>::<<>>::<<22>>
    puff plista3 = (b2? a2 + 1 : abc2|>l2|>0<| - lista1|>2<||>2<|<|):<<1,2>>
    puff plista3 = <<1,2>>
    
    puff plista4 = puff plista3

    @ Esto deberia dar error p2|}10{| = 12
    @ Esto deberia dar error p1 = p2|}10{|
    @ Esto deberia dar error p1 = p2
    
    Power p1,p4 = 0
    @puff p2|>-(((p1)))<| = joystick ~HEY LOL~

    
    
    Power a = l2|>2<| + 2 + 2 * 3 // 3 / 4  % 4 - 5 - -1 + #l2
     
    Power b = ((a + (2)) + 2) * ((3 // 3) / (4  % 4) - 5) - ((-1) + #l2)
    
    Battle c22
    c22 = ((b1 || Win && Lose || !b2 ) == Win && b4 != (b2? Win:Lose))
    
    Power|}2{| manu1
    Power|}30{| manu2
    
    c22 = manu1 == manu1

    Kit of Power manukitpower1
    Kit of Power manukitpower2
    
    c22 = manukitpower1 == manukitpower2

    Power puff manukitpower3
    Kit of Kit of Power puff puff puff manukitpower4
    
    c22 = puff manukitpower3 == puff puff puff manukitpower4|>12<||>3<|
         
    Rune c1 = ^*c*
    Rune c223 = .*c*

    Rune c2222
    Rune c3 = ^.c2222
    
    Rune c4 = .^c2222
    Rune c5 = .(^c2222)
    Rune c6 = (.(^c2222))
    Rune c7 = ^(.(c2222))
    
    
    "' Hola '"
    play:
      @<Lista de Instrucciones>
      @test = 1
            gameOver
            keepPlaying
       
        @ Notar que la condicion de lock debe ser booleana
        controller Power i = (2 - 2) -> 10 - 1 lock (abc2|>0<| + 2 ) * (b2? a2 + 1 : abc2|>5 - 1<|):

            Button:
                | 12 > 2 }
            gameOver
            keepPlaying
                    Power a
            .~    
            Button:
                | 1'0 > 2'2 }
                    unlock i + 2
                | notPressed }
                    unlock i + 2
            .~    
        .~ 
             
    @  asd
    lock (abc2|>0<| + 1 ) * (b2? a2 + 1 : abc2|>2 - 1<|)
    .~

    controller Power i <- abc:
    .~ 
    controller Skill i <- abc:
    .~ 
    controller Contacto i <- abc:
    .~ 
.~

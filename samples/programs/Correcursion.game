monster par(Power n1) Battle:
  Button:
    | n1 == 0 } unlock Win
    | n1 == 1 } unlock Lose
    | notPressed } 
      Battle r1 = kill impar(n1 - 1)
      unlock r1
  .~
.~
    @ unlock (kill impar(n - 1)) @ Esto no agarra bien el tipo de retorno de la 
    @ promesa y por eso da type error. Deberia inferir que es el tipo de retorno 
    @ de esta funcion y cuando se defina se checkea que sea asi

monster impar(Power n2) Battle:
  Button:
    | n2 == 0 } unlock Lose
    | n2 == 1 } unlock Win
    | notPressed } 
      Battle r2 = kill par(n2 - 1)
      unlock r2
  .~
.~

boss respuesta1(Battle p1):
  Button:
    | p1 } drop ~Es par~
    | notPressed } drop ~No es par~
  .~
.~

boss respuesta2(Battle p2):
  Button:
    | p2 } drop ~Es impar~
    | notPressed } drop ~No es impar~
  .~
.~

world %Correcursion%:
  play:
    drop ~Determinar paridad, disparidad de un entero~
    Power n = joystick ~Escribe un numero~
    Power opts = joystick ~1. paridad, 2. disparidad, 0. salir ~
    Button:
      | opts == 0 } gameOver
      | opts == 1 } kill respuesta1(kill par(n))
      | opts == 2 } kill respuesta2(kill impar(n))
      | notPressed } drop ~No me dijiste nada que valga la pena~
    .~
  lock Win
  .~
  drop ~Bye~
.~

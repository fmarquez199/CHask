%tokens
  bool              { TkBTL _ _ }
  Null              { TkDTZ _ _ }
  registro          { TkINV _ _ }
  union             { TkITM _ _ }
  lista             { TkKIT _ _ }
  int               { TkPWR _ _ }
  char              { TkRNE _ _ }
  Str               { TkRNS _ _ }
  float             { TkSKL _ _ }
  if                { TkBTN _ _ }
  proc              { TkBSS _ _ }
  for               { TkCTR _ _ }
  print             { TkDRP _ _ }
  else              { TkNPR _ _ }
  free              { TkFRE _ _ }
  break             { TkGMO _ _ }
  input             { TkJST _ _ }
  continue          { TkKPP _ _ }
  invocar           { TkKLL _ _ }
  while             { TkLCK _ _ }
  function          { TkMST _ _ }
  do                { TkPLY _ _ }
  desrreferenciador { TkAPT _ _ }
  "."               { TkSPW _ _ }
  new               { TkSMN _ _ }
  return            { TkNLK _ _ }
  world             { TkWRL _ _ }
  de                { TkOFK _ _ }

  -- Literales booleanos
  
  true              { TkWIN _ _ }
  false             { TkLOS _ _ }

  -- Identificadores

  programa          { TkNMB _ _ }
  var               { TkIDF _ _ }

  -- Caracteres

  chr               { TkCHA _ _ }
  string            { TkSTG _ _ }
  
  -- Literares numericos
  
  entero            { TkINT _ _ }
  flotante          { TkFLT _ _ }

  -- Simbolos

  fin               { TkFIN _ _ }
  "//"              { TkIDV _ _ }
  "||"              { TkLOR _ _ }
  "&&"              { TkAND _ _ }
  "<="              { TkLET _ _ }
  "=="              { TkEQL _ _ }
  "!="              { TkNEQ _ _ }
  ">="              { TkGET _ _ }
  "<<"              { TkLSA _ _ }
  ">>"              { TkLSC _ _ }
  "++"              { TkINC _ _ }
  "--"              { TkDEC _ _ }
  "<-"              { TkIN  _ _ }
  "->"              { TkTO  _ _ }
  "|}"              { TkARA _ _ }
  "{|"              { TkARC _ _ }
  "+"               { TkSUM _ _ }
  "-"               { TkMIN _ _ }
  "*"               { TkTMS _ _ }
  "/"               { TkDVD _ _ }
  "%"               { TkMOD _ _ }
  "#"               { TkLEN _ _ }
  "?"               { TkREF _ _ }
  "!"               { TkEXC _ _ }
  "<"               { TkLTH _ _ }
  ">"               { TkGTH _ _ }
  "("               { TkPRA _ _ }
  ")"               { TkPRC _ _ }
  "["               { TkCRA _ _ }
  "]"               { TkCRC _ _ }
  "{"               { TkLLA _ _ }
  "}"               { TkLLC _ _ }
  ","               { TkCOM _ _ }
  ":"               { TkDSP _ _ }
  "|"               { TkCON _ _ }
  "="               { TkASG _ _ }

-- Programa: Estructura del programa.
Programa: world programa ":" ListaInstrucciones fin

ListaInstrucciones: Instruccion "\n" ListaInstrucciones
                  | Instruccion

-- Instruccion: Tipos de instrucciones en BasicTran
Instruccion: Tipo var
           | Tipo var "=" Expresion
           | variable "=" Expresion
           | if ":" Guardias fin
           | for var "=" entero to entero ":" ListaInstrucciones fin
           | for var "=" entero to entero while Booleanas ":" ListaInstrucciones fin
           | for var "=" Arreglo ":" ListaInstrucciones fin
           | for var "=" List ":" ListaInstrucciones fin
           | do ":" ListaInstrucciones while Booleanas fin
           | break
           | continue
           | function var ( ListaParametros ) Tipo : ListaInstrucciones fin
           | proc var ( ListaParametros ) Tipo : ListaInstrucciones fin
           | return Expresion
           | invocar var
           | variable = input 
           | variable = input string 
           | print ListaExpresiones

Tipo: int
    | float
    | bool
    | char
    | Tipo "|}" entero "{|" -- Arreglo
    | Str
    | lista de Tipo
    | registro
    | union
    | apuntador
-- Cómo hacemos para que reconozca los nombres de registros como tipos

-- Expresion: Tipos de expresiones del lenguaje.
Expresion: Aritmeticas
         | Booleanas
         | Chars
         | Arreglos
         | Listas
         | Registros
         | Uniones
         | Apuntadores
         | Booleanas "?" Subrutina ":" Subrutina
         | Booleanas "?" Expresion ":" Expresion
         | var

Aritmeticas: Termino "+" Expresion
           | Termino "-" Expresion
           | Termino

Termino: Factor "*" Termino
       | Factor "\" Termino
       | Factor "\\" Termino
       | Factor "%" Termino
       | Factor

Factor: entero
      | flotante
      | variable
      | "-" Factor
      | "(" Factor ")"

Booleanas: Opcion || Booleanas
         | Opcion

Opcion: Requerimiento && Opcion
      | Requerimiento

Requerimiento: true
             | false
             | Comparacion
             | no Requerimiento
             | ( Requerimiento )

Comparacion: Aritmeticas < Aritmeticas
           | Aritmeticas <= Aritmeticas
           | Aritmeticas == Aritmeticas
           | Aritmeticas != Aritmeticas
           | Aritmeticas != Aritmeticas
           | Aritmeticas >= Aritmeticas
           | Aritmeticas > Aritmeticas
           | Booleanas < Booleanas
           | Booleanas <= Booleanas
           | Booleanas == Booleanas
           | Booleanas != Booleanas
           | Booleanas >= Booleanas
           | Booleanas > Booleanas
           | Chars < Chars
           | Chars <= Chars
           | Chars == Chars
           | Chars != Chars
           | Chars >= Chars
           | Chars > Chars

-- Chars: Formas de mostrar un caracter.
Chars: ^ Chars
     | Char

Char: . Char
    | ( Char )
    | chr

-- Arreglos: Formas de mostrar un array. **Aquí hay que sentarse a pensar**
Arreglos: Arreglo "|}" entero "{|"
        | string "|}" entero "{|"
        | string

Arreglo: "|}" ListaExpresiones "{|"

-- ListaExpresiones: Forma de mostrar los elementos de un array.
ListaExpresiones  : Expresion "," ListaExpresiones
                  | Expresion

Listas: Lista "<<" entero ">>"
      | Factor ":" Lista
      | Requerimiento ":" Lista
      | char ":" Lista

Lista: Lista "::" List
     | List

List: "<<" ListaExpresiones ">>"

Registros: --Ni idea que hacer

Uniones: -- Ni idea que hacer

Apuntadores: -- Ni idea que hacer

Guardias: Guardia Guardias
        | Guardia

Guardia: "|" Booleanas "}" ListaInstrucciones
       | "|" else "}" ListaInstrucciones

ListaParametros: Tipo var "," ListaParametros
               | Tipo "?" var "," ListaParametros
               | Tipo var
               | Tipo "?" var
               | -- Se supone que una función puede recibir 0 parametros.
